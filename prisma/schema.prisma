generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_URL")
}

model AppData {
  id                  Int             @id @default(autoincrement())
  nama                String?     
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  admin               Admin[]
  halaman             Halaman[]
  setting             Setting?
  tps                 Tps[]
  paslon              Paslon[]
  pengumuman          Pengumuman[]
  berita              Berita[]
  users               User[]
  tugas               Tugas[]
  koordinator         Koordinator[]
  slide               Slide[]
  cs                  Cs[]
  agenda              Agenda[]
  pengaduan           Pengaduan[]
  aspirasi            Aspirasi[]
  realCount           RealCount[]
} 

model Setting {
  id                  Int             @id @default(autoincrement())
  kode                String?
  appId               Int             @unique
  provId              Int?
  kotaId              Int?
  bgUtama             String?     
  bgLogin             String?
  channel             String?
  paslon              String?
  appName             String?
  jumlahSuara         Int             @default(0)     
  appVersion          Int             @default(0)   
  urlUpdate           String?  
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
  prov                Wilayah?        @relation("prov", fields: [provId], references: [id])
  kota                Wilayah?        @relation("kota", fields: [kotaId], references: [id])
} 

model FirebaseToken {
  id                  Int             @id @default(autoincrement())
  token               String
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
}

model Admin {
  id                  Int             @id @default(autoincrement())
  appId               Int
  nama                String     
  email               String?
  hp                  String          @unique
  wa                  String?
  password            String
  role                String          @default("Admin")
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
}  

model Wilayah {
  id                  Int             @id @default(autoincrement())
  kode                String                   
  nama                String?
  provinsi            String?
  kabupaten           String?
  kecamatan           String?
  kelurahan           String?
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  prov                Setting[]       @relation("prov")
  kota                Setting[]       @relation("kota")
  tpsKota             Tps[]           @relation("tpsKota")
  tpsKec              Tps[]           @relation("tpsKec")
  koordinator         Koordinator[]
  userKota            User[]           @relation("kota")
  userKec             User[]           @relation("kecamatan")
  userKel             User[]           @relation("kelurahan")
}

model User {
  id                  Int             @id @default(autoincrement())
  appId               Int
  nama                String?         
  hp                  String?         
  wa                  String?         
  password            String?  
  nik                 String?
  tempatLahir         String?
  tanggalLahir        String?
  jenisKelamin        String?
  umur                Int?
  provId              Int
  kabId               Int
  kecId               Int
  kelId               Int
  foto                String?
  dukungan            String?
  token               String?
  jabatan             String          @default("Simpatisan")
  os                  String          @default("ANDROID")
  appVersion          Int             @default(0)
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  notifikasi          Notifikasi[]
  tpsSaksi            Tps?
  tugas               Tugas[]
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
  kab                 Wilayah         @relation("kota", fields: [kabId], references: [id])
  kec                 Wilayah         @relation("kecamatan", fields: [kecId], references: [id])
  kel                 Wilayah         @relation("kelurahan", fields: [kelId], references: [id])
  koordinator         Koordinator[]
  pengaduan           Pengaduan[]
  aspirasi            Aspirasi[]
  refId               Int?
  refferal            User?           @relation("RefferalFollower", fields: [refId], references: [id])
  follower            User[]          @relation("RefferalFollower")
}   

model Koordinator {
  id                  Int             @id @default(autoincrement())
  appId               Int
  wilayahId           Int     
  userId              Int             
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
  user                User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  wilayah             Wilayah         @relation(fields: [wilayahId], references: [id], onDelete: Cascade)
  @@unique([appId, wilayahId, userId], name: "app_wilayah_user")
}  

model Notifikasi {
  id                Int               @id @default(autoincrement())
  userId            Int   
  judul             String
  deskripsi         String
  baca              Int               @default(0)
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
  user              User              @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Halaman {
  id                  Int             @id @default(autoincrement())
  appId               Int
  nama                String     
  deskripsi           String?
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
}  

model Tps {
  id                  Int             @id @default(autoincrement())
  appId               Int
  kotaId              Int
  kecId               Int     
  tpsNo               Int
  saksiId             Int?            @unique
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
  kota                Wilayah?        @relation("tpsKota", fields: [kotaId], references: [id])
  kec                 Wilayah?        @relation("tpsKec", fields: [kecId], references: [id])
  saksi               User?           @relation(fields: [saksiId], references: [id])
  realCount           RealCount[]
}  

model Paslon {
  id                  Int             @id @default(autoincrement())
  appId               Int
  noUrut              Int
  calon               String     
  wakil               String     
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
  realCount           RealCount[]
} 

model Pengumuman {
  id                  Int             @id @default(autoincrement())
  appId               Int
  judul               String
  deskripsi           String?     
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
} 

model Berita {
  id                  Int             @id @default(autoincrement())
  appId               Int
  tanggal             String
  judul               String
  deskripsi           String?     
  sumber              String?  
  gambar              String?   
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
}

model Tugas {
  id                  Int             @id @default(autoincrement())
  appId               Int
  userId              Int
  judul               String
  deskripsi           String?     
  jumlah              Int     
  progress            Int             @default(0)
  deadline            String?
  oleh                String?
  jabatan             String?
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
  user                User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  laporanTugas        LaporanTugas[]
} 

model LaporanTugas {
  id                  Int             @id @default(autoincrement())
  tugasId             Int
  deskripsi           String?     
  koordinat           String?     
  gambar              String?   
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  tugas               Tugas           @relation(fields: [tugasId], references: [id], onDelete: Cascade)

} 

model Slide {
  id                  Int             @id @default(autoincrement())
  appId               Int
  title               String      
  gambar              String      
  deskripsi           String?         
  isShow              Int             @default(1)
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
}  

model Cs {
  id                  Int             @id @default(autoincrement())
  appId               Int
  nama                String 
  url                 String
  gambar              String
  jamOperasional      String
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
}

model Agenda {
  id                  Int             @id @default(autoincrement())
  appId               Int
  judul               String 
  tanggal             String
  alamat              String
  deskripsi           String
  gambar              String
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
}

model Pengaduan {
  id                  Int             @id @default(autoincrement())
  appId               Int
  userId              Int
  judul               String 
  alamat              String
  deskripsi           String
  gambar              String
  koordinat           String
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
  user                User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Aspirasi {
  id                  Int             @id @default(autoincrement())
  appId               Int
  userId              Int
  judul               String 
  deskripsi           String
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
  user                User            @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model RealCount {
  id                  Int             @id @default(autoincrement())
  appId               Int
  tpsId               Int
  paslonId            Int
  suara               Int             @default(0) 
  foto                String?
  createdAt           DateTime        @default(now())
  updatedAt           DateTime        @updatedAt
  appData             AppData         @relation(fields: [appId], references: [id], onDelete: Cascade)
  paslon              Paslon          @relation(fields: [paslonId], references: [id], onDelete: Cascade)
  tps                 Tps             @relation(fields: [tpsId], references: [id], onDelete: Cascade)
  @@unique([tpsId, paslonId], name: "tpsId_paslonId")

}